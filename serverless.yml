service: where-is-my-nft

plugins:
  # Plugin responsible for translating typescript to javascript
  - serverless-esbuild
  # Plugin responsible for deleting past lambda version
  - serverless-prune-plugin

package:
  individually: true
  exclude:
    - .serverless/**
    - .git/**
  include:
    - "!node_modules/.prisma/client/libquery_engine-*"
    - "node_modules/.prisma/client/libquery_engine-rhel-*"
    - "!node_modules/prisma/libquery_engine-*"
    - "!node_modules/@prisma/engines/**"
    - "node_modules/.prisma/client/schema.prisma"

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${self:custom.stage}
  region: us-east-1
  environment:
    STAGE: ${self:custom.stage}
    DATABASE_URL: postgresql://${self:custom.postgres.username}:${self:custom.postgres.password}@${self:custom.postgres.host}:5432/${self:custom.postgres.dbName}
    databaseUser: ${self:custom.postgres.username}
    databaseName: ${self:custom.postgres.dbName}
    databasePassword: ${self:custom.postgres.password}
    databaseHost: ${self:custom.postgres.host}
    rpcUrl: 123 #${ssm:${self:custom.rpcUrlSecretPath}}
  stackTags:
    service: where-is-my-nft-backend

custom:
  esbuild:
    target: "node16"
    bundle: true
    minify: false
    packagerOptions:
      scripts:
        - npx prisma generate

  stage: ${opt:stage, 'production'}
  prune:
    automatic: true
    number: 1
  postgres:
    dbName: postgres
    username: nft
    password: 123 # ${ssm:${self:custom.rdsSecretName}}
    maxConnections:
      production: 100
    dbInstanceClass:
      production: db.t4g.micro
    allocatedStorage:
      production: "20"
    vpcCIDR: 10
    host: 123 #${ssm:${self:custom.rdsHostSecretPath}}
  rdsSecretName: 123 #/rds/password-${self:custom.stage}
  rdsHostSecretPath: 123 # /rds/host-${self:custom.stage}
  rpcUrlSecretPath: 123 #/blockchain/rpc-${self:custom.stage}

functions:
  # - ${file(sls/functions/cron/itemsAnalytics.yml)}

resources:
  # # RDS
  # - ${file(sls/resources/rds/database.yml)}
  # - ${file(sls/resources/rds/vpc.yml)}
  # PARAMETER STORE
  - ${file(sls/resources/parameter/database.yml)}
